layout: index
description: QeePHP 遵循“内核最小化，功能插件化”的原则，利用微内核实现了一个快速、可扩展的架构。然后在核心之外，通过各种插件提供不同类型的基础服务。
subtitle: QeePHP 一个与众不同的框架i
comments: false
---
ul#intro-feature-list
  li.intro-feature-wrap
    .intro-feature
      .intro-feature-icon
        i.fa.fa-bolt
      h3.intro-feature-title 微内核
      p.intro-feature-desc 内核最小化,保证了性能，不会因为将各种功能添加到内核中导致框架出现性能问题.
  li.intro-feature-wrap
    .intro-feature
      .intro-feature-icon
        i.fa.fa-pencil
      h3.intro-feature-title 灵活性
      p.intro-feature-desc 具有优秀的可扩展能力和灵活性，而且外围功能的发展不会影响到框架核心.
  li.intro-feature-wrap
    .intro-feature
      .intro-feature-icon
        i.fa.fa-cube
      h3.intro-feature-title MVC 模式
      p.intro-feature-desc QeePHP 采用的是Passive（被动）MVC 模式,分离逻辑和表现.
  li.intro-feature-wrap
    .intro-feature
      .intro-feature-icon
        i.fa.fa-cog
      h3.intro-feature-title URL路由双向解析
      p.intro-feature-desc QeePHP独有的URL路由双向解析让开发者仅仅修改配置文件就能实现对应用程序URL的调整 .
